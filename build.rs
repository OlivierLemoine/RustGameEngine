fn main() -> Result<(), Box<dyn std::error::Error>> {
    let all_concat = ["./src/engine/math/vector2.rs", 
    "./src/engine/object.rs", 
    "./src/engine/components/transform.rs",
    "./src/engine/components/script.rs",
    "./src/engine/components/sprite.rs",
    "./src/engine/components/rigidbody.rs"]
        .iter()
        .map(|path| std::fs::read_to_string(path))
        .collect::<Result<Vec<_>, _>>()?
        .concat()
        .replace(", Deserialize,", "")
        .replace(", Deserialize", "")
        .replace("Deserialize,", "")
        .replace("#[derive(Deserialize)]", "")
        .split("\r\n")
        .map(|v| v.trim())
        .filter(|v| !v.starts_with("//"))
        .filter(|v| !v.starts_with("#[serde"))
        .filter(|v| !v.starts_with("#!["))
        .filter(|v| !v.starts_with("use super"))
        .filter(|v| !v.starts_with("use serde"))
        .collect::<String>()
        // .
        ;

    std::fs::write(
        "./prelude.rs",
        format!(
            "// This file has been generated by a script, don't modify it!
pub use std::cell::RefCell;pub use std::rc::{{Rc, Weak}};{}",
            all_concat
        ),
    )?;

    Ok(())
}
